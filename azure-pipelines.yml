trigger:
  - odin-azure-pipelines

stages: 
  - stage: BeforeTests
    jobs:
      - job: Prepare
        steps:
          - script: |
              ./vendor/bin/phpcs --standard=psr2 --ignore=vendor -n .
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
              sudo docker info
              echo ${AGENT_ID} -- ${AGENT_MNAME} -- ${AGENT_NAME}
            displayName: 'Setup CC'
            env:
              TEST_VAR: B
              AGENT_ID: $(Agent.Id)
              AGENT_MNAME: $(Agent.MachineName)
              AGENT_NAME: $(Agent.Name)

  - stage: Tests
    jobs:
      - job: Tests1
        variables:
          phpVersion: 5.6
        steps:
          - template: azure-pipelines-composer-steps.yml
          - script: php -version
          - script: echo $AWS_ECR_REGISTRY_URI
          - script: echo $TEST_VAR
          - script: ./vendor/bin/phpunit --testsuite base-tests --coverage-clover build/logs/clover.xml --debug 
            env:
              AWS_ECR_ACCESS_KEY_ID: $(AWS_ECR_ACCESS_KEY_ID)
              AWS_ECR_SECRET_ACCESS_KEY: $(AWS_ECR_SECRET_ACCESS_KEY)
              AWS_ECR_REGISTRY_ACCOUNT_ID: $(AWS_ECR_REGISTRY_ACCOUNT_ID)
              AWS_ECR_REGISTRY_REGION: $(AWS_ECR_REGISTRY_REGION)
              AWS_ECR_REGISTRY_URI: $(AWS_ECR_REGISTRY_URI)
              AWS_KMS_TEST_KEY: $(AWS_KMS_TEST_KEY)
              DOCKERHUB_PRIVATE_PASSWORD: $(DOCKERHUB_PRIVATE_PASSWORD)
              DOCKERHUB_PRIVATE_SERVER: $(DOCKERHUB_PRIVATE_SERVER)
              DOCKERHUB_PRIVATE_USERNAME: $(DOCKERHUB_PRIVATE_USERNAME)
              GIT_PRIVATE_PASSWORD: $(GIT_PRIVATE_PASSWORD)
              GIT_PRIVATE_USERNAME: $(GIT_PRIVATE_USERNAME)
              QUAYIO_PRIVATE_PASSWORD: $(QUAYIO_PRIVATE_PASSWORD)
              QUAYIO_PRIVATE_USERNAME: $(QUAYIO_PRIVATE_USERNAME)
              STORAGE_API_TOKEN: $(STORAGE_API_TOKEN)
              STORAGE_API_URL: $(STORAGE_API_URL)
          - script: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          - script: chmod +x ./cc-test-reporter        
          - script: ./cc-test-reporter format-coverage --output "coverage/codeclimate.1.json"
          - script: sudo docker run --rm -e AWS_ACCESS_KEY_ID=$AWS_ECR_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_ECR_SECRET_ACCESS_KEY -v coverage/:/data/ quay.io/keboola/aws-cli:latest s3 sync /data/ "s3://docker-runner-logs/coverage/$(Build.BuildNumber)"
            env:
              AWS_ECR_ACCESS_KEY_ID: $(AWS_ECR_ACCESS_KEY_ID)
              AWS_ECR_SECRET_ACCESS_KEY: $(AWS_ECR_SECRET_ACCESS_KEY)

      - job: Tests2
        variables:
          phpVersion: 5.6
        steps:
          - template: azure-pipelines-composer-steps.yml
          - script: ./vendor/bin/phpunit --testsuite runner-tests --coverage-clover build/logs/clover.xml --debug
            env:
              AWS_ECR_ACCESS_KEY_ID: $(AWS_ECR_ACCESS_KEY_ID)
              AWS_ECR_SECRET_ACCESS_KEY: $(AWS_ECR_SECRET_ACCESS_KEY)
              AWS_ECR_REGISTRY_ACCOUNT_ID: $(AWS_ECR_REGISTRY_ACCOUNT_ID)
              AWS_ECR_REGISTRY_REGION: $(AWS_ECR_REGISTRY_REGION)
              AWS_ECR_REGISTRY_URI: $(AWS_ECR_REGISTRY_URI)
              AWS_KMS_TEST_KEY: $(AWS_KMS_TEST_KEY)
              DOCKERHUB_PRIVATE_PASSWORD: $(DOCKERHUB_PRIVATE_PASSWORD)
              DOCKERHUB_PRIVATE_SERVER: $(DOCKERHUB_PRIVATE_SERVER)
              DOCKERHUB_PRIVATE_USERNAME: $(DOCKERHUB_PRIVATE_USERNAME)
              GIT_PRIVATE_PASSWORD: $(GIT_PRIVATE_PASSWORD)
              GIT_PRIVATE_USERNAME: $(GIT_PRIVATE_USERNAME)
              QUAYIO_PRIVATE_PASSWORD: $(QUAYIO_PRIVATE_PASSWORD)
              QUAYIO_PRIVATE_USERNAME: $(QUAYIO_PRIVATE_USERNAME)
              STORAGE_API_TOKEN: $(STORAGE_API_TOKEN)
              STORAGE_API_URL: $(STORAGE_API_URL)
          - script: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          - script: chmod +x ./cc-test-reporter        
          - script: ./cc-test-reporter format-coverage --output "coverage/codeclimate.2.json"
          - script: sudo docker run --rm -e AWS_ACCESS_KEY_ID=$AWS_ECR_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_ECR_SECRET_ACCESS_KEY -v coverage/:/data/ quay.io/keboola/aws-cli:latest s3 sync /data/ "s3://docker-runner-logs/coverage/$(Build.BuildNumber)"
            env:
              AWS_ECR_ACCESS_KEY_ID: $(AWS_ECR_ACCESS_KEY_ID)
              AWS_ECR_SECRET_ACCESS_KEY: $(AWS_ECR_SECRET_ACCESS_KEY)

      - job: Test3
        variables:
          phpVersion: 5.6
        pool:
          vmImage: 'ubuntu-16.04'          
        steps:
          - template: azure-pipelines-composer-steps.yml
          - script: ./vendor/bin/phpunit --testsuite executor-tests --coverage-clover build/logs/clover.xml --debug
            env:
              AWS_ECR_ACCESS_KEY_ID: $(AWS_ECR_ACCESS_KEY_ID)
              AWS_ECR_SECRET_ACCESS_KEY: $(AWS_ECR_SECRET_ACCESS_KEY)
              AWS_ECR_REGISTRY_ACCOUNT_ID: $(AWS_ECR_REGISTRY_ACCOUNT_ID)
              AWS_ECR_REGISTRY_REGION: $(AWS_ECR_REGISTRY_REGION)
              AWS_ECR_REGISTRY_URI: $(AWS_ECR_REGISTRY_URI)
              AWS_KMS_TEST_KEY: $(AWS_KMS_TEST_KEY)
              DOCKERHUB_PRIVATE_PASSWORD: $(DOCKERHUB_PRIVATE_PASSWORD)
              DOCKERHUB_PRIVATE_SERVER: $(DOCKERHUB_PRIVATE_SERVER)
              DOCKERHUB_PRIVATE_USERNAME: $(DOCKERHUB_PRIVATE_USERNAME)
              GIT_PRIVATE_PASSWORD: $(GIT_PRIVATE_PASSWORD)
              GIT_PRIVATE_USERNAME: $(GIT_PRIVATE_USERNAME)
              QUAYIO_PRIVATE_PASSWORD: $(QUAYIO_PRIVATE_PASSWORD)
              QUAYIO_PRIVATE_USERNAME: $(QUAYIO_PRIVATE_USERNAME)
              STORAGE_API_TOKEN: $(STORAGE_API_TOKEN)
              STORAGE_API_URL: $(STORAGE_API_URL)
          - script: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          - script: chmod +x ./cc-test-reporter        
          - script: ./cc-test-reporter format-coverage --output "coverage/codeclimate.3.json"
          - script: sudo docker run --rm -e AWS_ACCESS_KEY_ID=$AWS_ECR_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_ECR_SECRET_ACCESS_KEY -v coverage/:/data/ quay.io/keboola/aws-cli:latest s3 sync /data/ "s3://docker-runner-logs/coverage/$(Build.BuildNumber)"
            env:
              AWS_ECR_ACCESS_KEY_ID: $(AWS_ECR_ACCESS_KEY_ID)
              AWS_ECR_SECRET_ACCESS_KEY: $(AWS_ECR_SECRET_ACCESS_KEY)

  - stage: AfterTests
    jobs:
      - job: Report
        steps:
          - template: azure-pipelines-composer-steps.yml
          - script: docker run --rm -e AWS_ACCESS_KEY_ID=$AWS_ECR_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_ECR_SECRET_ACCESS_KEY -v $TRAVIS_BUILD_DIR/coverage/:/data/ quay.io/keboola/aws-cli:latest s3 sync "s3://docker-runner-logs/coverage/$TRAVIS_BUILD_NUMBER" /data/
          - script: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          - script: chmod +x ./cc-test-reporter
          - script: ./cc-test-reporter sum-coverage --output - --parts 3 coverage/codeclimate.*.json | ./cc-test-reporter upload-coverage --input -
            displayName: 'CC report'
